# 3 "RegexLexer.mll"
 
open RegexParser

(* resolve pre-define character classes into (char * char) list representation *)
let resolve_class cls_str = match cls_str with
  "\\d" | "\\p{Digit}" -> [ ('\x30', '\x39') ]
  |"\\D" -> [ ('\x00', '\x2f'); ('\x3a', '\x7f') ]
  |"\\s" | "\\p{Space}"-> [ ('\x09', '\x0d'); ('\x20', '\x20') ]
  |"\\S" -> [ ('\x00', '\x08'); ('\x0e', '\x1f'); ('\x21', '\x7f') ]
  |"\\w" -> [ ('\x30', '\x39'); ('\x41', '\x5a'); ('\x5f', '\x5f'); ('\x61', '\x7a') ]
  |"\\W" -> [ ('\x00', '\x2f'); ('\x3a', '\x40'); ('\x5b', '\x5e'); ('\x60', '\x60'); ('\x7b', '\x7f') ]
  |"\\p{Lower}" -> [ ('\x61', '\x7a') ]
  |"\\p{Upper}" -> [ ('\x41', '\x5a') ]
  |"\\p{ASCII}" -> [ ('\x00', '\x7f') ]
  |"\\p{Alpha}" -> [ ('\x41', '\x5a'); ('\x61', '\x7a') ]
  |"\\p{Alnum}" -> [ ('\x30', '\x39'); ('\x41', '\x5a'); ('\x61', '\x7a') ]
  |"\\p{Punct}" -> [ ('\x21', '\x2f'); ('\x3a', '\x40'); ('\x5b', '\x60'); ('\x7b', '\x7e') ]
  |"\\p{Graph}" | "\\p{Print}" -> [ ('\x21', '\x7e') ]
  |"\\p{Blank}" -> [ ('\x09', '\x09'); ('\x20', '\x20') ]
  |"\\p{Cntrl}" -> [ ('\x00', '\x1f'); ('\x7f', '\x7f') ]
  |"\\p{XDigit}" -> [ ('\x30', '\x39'); ('\x41', '\x46'); ('\x61', '\x66') ]
  |_ -> raise ParsingData.InternalLexingError;;

(* disallow non-ascii characters *)
let resolve_char c _ =
  if (c < '\x00' || c > '\x7f') then '\xff' else  c;;

(* handle character escapes and numerals *)
let resolve_literal lit_str spos =
  let lit_switch = Str.regexp "[\\]x\\|[\\]u|[\\]0\\|[\\]c\\|[\\].\\|." in
  let _ = if not (Str.string_match lit_switch lit_str 0) then
            raise ParsingData.InternalLexingError in
  let lit_head = Str.matched_string lit_str in
  let c = match lit_head with
    "\\x" -> 
      let code = int_of_string (Str.replace_first lit_switch "0x" lit_str) in
      Char.chr code
    |"\\u" ->
      let code = int_of_string (Str.replace_first lit_switch "0x" lit_str) in
        Char.chr (if code > 0xff then 0xff else code)
    |"\\0" -> 
      let code = int_of_string (Str.replace_first lit_switch "0o" lit_str) in
      Char.chr code
    |"\\c" ->
      begin
        match lit_str.[2] with
          '?' -> '\x7f'|
          c -> Char.chr (Char.code c - Char.code '@')
      end
    |"\\t" -> '\t'
    |"\\n" -> '\n'
    |"\\r" -> '\r'
    |"\\f" -> '\x0c'
    |"\\a" -> '\x07'
    |"\\e" -> '\x1b'
    |_ -> lit_str.[0] in
  resolve_char c spos;;

(* map of modifiers *)
let flg_map = Hashtbl.create 8;;
Hashtbl.add flg_map 'd' ParsingData.flg_unix_lines;;
Hashtbl.add flg_map 'i' ParsingData.flg_no_case;;
Hashtbl.add flg_map 'm' ParsingData.flg_multiline;;
Hashtbl.add flg_map 's' ParsingData.flg_dotall;;

(* resolve modifier *)
let get_flag c cpos =
  try
    Hashtbl.find flg_map c
  with Not_found ->
    raise (ParsingData.UnsupportedInlineModifier(cpos, c));;

(* functions for querying token position *)
let get_pos lbuf = (Lexing.lexeme_start lbuf, Lexing.lexeme_end lbuf - 1);;
let get_spos lbuf = Lexing.lexeme_start lbuf;;
let get_epos lbuf = Lexing.lexeme_end lbuf - 1;;

# 80 "RegexLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\208\255\212\255\060\000\221\255\222\255\223\255\001\000\
    \226\255\001\000\000\000\002\000\004\000\015\000\254\255\255\255\
    \252\255\253\255\249\255\250\255\246\255\247\255\031\000\135\000\
    \026\000\243\255\244\255\145\000\030\000\240\255\241\255\033\000\
    \237\255\238\255\039\000\229\255\000\000\232\255\233\255\234\255\
    \230\255\231\255\225\255\209\255\210\255\028\000\211\255\164\000\
    \208\000\155\000\000\001\187\000\214\255\215\255\216\255\217\255\
    \218\255\219\255\220\255\023\001\197\000\055\001\063\001\078\001\
    \101\001\139\001\145\001\006\000\000\000\009\000\012\000\007\000\
    \038\000\000\000\145\000\010\000\042\000\035\000\001\000\097\000\
    \097\000\111\000\002\000\110\000\115\000\004\000\001\000\004\000\
    \109\000\000\000\001\000\145\000\003\000\002\000\139\000\152\000\
    \148\000\160\000\151\000\158\000\153\000\217\000\203\000\213\000\
    \221\000\209\000\213\000\221\000\224\000\231\000\235\000\238\000\
    \237\000\227\000\253\000\252\000\251\000\126\001\249\255\014\000\
    \204\001\255\255\250\255\251\255\252\000\252\255\023\002\064\002\
    \194\001\112\002\167\002\049\002\060\002\171\001\138\002\254\255\
    \128\002\205\002\245\002\146\002\037\003\060\003\228\002\236\002\
    \244\002\098\003\121\003\159\003\182\003\220\003\243\003\025\004\
    \025\001\022\000\028\001\031\001\026\001\045\001\036\001\077\001\
    \030\001\050\001\044\001\063\001\051\001\047\001\061\001\073\001\
    \068\001\074\001\116\001\124\001\142\001\102\001\116\001\125\001\
    \114\001\121\001\121\001\111\001\124\001\121\001\133\001\118\001\
    \125\001\134\001\154\001\153\001\162\001\170\001\158\001\188\001\
    \180\001\183\001\190\001\194\001\197\001\232\001\222\001\242\001\
    \241\001\240\001\111\003\248\255\249\255\253\255\015\000\066\004\
    \255\255\250\255\251\255\219\001\252\255\141\004\181\004\019\004\
    \229\004\028\005\167\004\178\004\035\004\255\004\254\255\245\004\
    \066\005\106\005\007\005\154\005\177\005\089\005\097\005\105\005\
    \215\005\238\005\020\006\043\006\081\006\104\006\142\006\231\001\
    \027\002\242\001\254\001\249\001\002\002\012\002\120\002\006\002\
    \059\002\053\002\072\002\060\002\050\002\072\002\084\002\088\002\
    \095\002\139\002\135\002\153\002\114\002\135\002\143\002\132\002\
    \140\002\141\002\131\002\144\002\140\002\152\002\136\002\153\002\
    \184\002\204\002\239\002\248\002\000\003\244\002\248\002\240\002\
    \243\002\010\003\014\003\017\003\017\003\007\003\027\003\032\003\
    \031\003\036\004\250\255\251\255\252\255\253\255\254\255\255\255\
    \065\004\252\255\253\255\064\003\255\255\254\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\031\000\
    \255\255\028\000\020\000\010\000\007\000\004\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \013\000\255\255\255\255\255\255\016\000\255\255\255\255\019\000\
    \255\255\255\255\027\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\045\000\255\255\045\000\
    \045\000\046\000\045\000\042\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\043\000\043\000\043\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\
    \255\255\255\255\255\255\255\255\004\000\255\255\004\000\004\000\
    \005\000\004\000\255\255\002\000\002\000\255\255\002\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\001\000\001\000\
    \001\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\
    \255\255\255\255\255\255\004\000\255\255\004\000\004\000\005\000\
    \004\000\255\255\002\000\002\000\255\255\002\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\001\000\001\000\001\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\002\000\255\255\255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\043\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\000\000\255\255\
    \000\000\000\000\255\255\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\119\000\000\000\255\255\
    \122\000\000\000\000\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\135\000\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\206\000\000\000\000\000\000\000\255\255\209\000\
    \000\000\000\000\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\222\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\035\001\000\000\000\000\000\000\000\000\000\000\000\000\
    \042\001\000\000\000\000\255\255\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\015\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\040\000\000\000\000\000\005\000\000\000\000\000\000\000\
    \009\000\008\000\013\000\012\000\000\000\021\000\004\000\019\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\017\000\133\000\220\000\041\000\000\000\011\000\
    \034\000\020\000\000\000\018\000\110\000\026\000\044\000\086\000\
    \037\000\030\000\087\000\023\000\033\000\080\000\016\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\025\000\195\000\007\000\003\000\029\000\006\000\042\000\
    \032\000\039\000\080\000\036\000\038\000\035\000\079\000\083\000\
    \090\000\092\000\093\000\094\000\049\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\051\000\114\000\107\000\
    \104\000\101\000\081\000\010\000\014\000\056\000\057\000\044\000\
    \046\000\044\000\044\000\055\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\052\000\044\000\046\000\
    \044\000\044\000\044\000\046\000\044\000\044\000\054\000\066\000\
    \095\000\077\000\078\000\096\000\024\000\002\000\058\000\048\000\
    \046\000\002\000\002\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\002\000\044\000\045\000\044\000\002\000\046\000\
    \002\000\047\000\044\000\046\000\050\000\044\000\053\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\061\000\061\000\061\000\061\000\060\000\
    \060\000\060\000\060\000\080\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\046\000\082\000\
    \080\000\088\000\091\000\089\000\085\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\084\000\080\000\080\000\
    \001\000\099\000\097\000\098\000\028\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\080\000\100\000\080\000\031\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\102\000\103\000\255\255\080\000\105\000\106\000\
    \080\000\059\000\059\000\059\000\059\000\059\000\059\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\108\000\109\000\080\000\111\000\112\000\113\000\080\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\115\000\116\000\
    \080\000\059\000\059\000\059\000\059\000\059\000\059\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\151\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \121\000\199\000\192\000\189\000\186\000\177\000\166\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\180\000\
    \170\000\162\000\181\000\163\000\164\000\165\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\125\000\167\000\168\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\255\255\165\000\171\000\
    \173\000\169\000\174\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\172\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\074\000\070\000\069\000\073\000\123\000\165\000\
    \071\000\255\255\120\000\176\000\175\000\076\000\165\000\165\000\
    \178\000\072\000\179\000\165\000\067\000\184\000\075\000\182\000\
    \183\000\068\000\165\000\185\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\132\000\132\000\132\000\132\000\131\000\131\000\
    \131\000\131\000\165\000\187\000\128\000\123\000\123\000\123\000\
    \123\000\123\000\123\000\123\000\123\000\123\000\255\255\136\000\
    \255\255\188\000\165\000\190\000\191\000\123\000\123\000\123\000\
    \125\000\123\000\123\000\123\000\123\000\123\000\123\000\123\000\
    \123\000\123\000\123\000\123\000\123\000\123\000\123\000\125\000\
    \123\000\123\000\123\000\125\000\123\000\123\000\123\000\165\000\
    \193\000\194\000\165\000\196\000\197\000\119\000\123\000\127\000\
    \125\000\119\000\119\000\123\000\123\000\123\000\123\000\123\000\
    \123\000\123\000\119\000\123\000\124\000\123\000\119\000\125\000\
    \119\000\126\000\123\000\125\000\129\000\123\000\123\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \148\000\198\000\165\000\200\000\201\000\165\000\238\000\030\001\
    \148\000\148\000\148\000\148\000\148\000\148\000\133\000\026\001\
    \023\001\119\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\133\000\020\001\017\001\134\000\134\000\134\000\134\000\
    \134\000\134\000\134\000\134\000\011\001\008\001\253\000\012\001\
    \148\000\148\000\148\000\148\000\148\000\148\000\118\000\119\000\
    \119\000\119\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\130\000\249\000\255\255\250\000\251\000\252\000\212\000\
    \139\000\130\000\130\000\130\000\130\000\130\000\130\000\133\000\
    \254\000\255\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\143\000\143\000\143\000\143\000\142\000\142\000\
    \142\000\142\000\252\000\001\001\255\255\004\001\002\001\005\001\
    \003\001\130\000\130\000\130\000\130\000\130\000\130\000\119\000\
    \119\000\119\000\119\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\135\000\252\000\138\000\000\001\135\000\135\000\007\001\
    \119\000\119\000\119\000\119\000\119\000\119\000\135\000\006\001\
    \252\000\252\000\135\000\009\001\135\000\137\000\010\001\252\000\
    \140\000\015\001\013\001\014\001\252\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\145\000\145\000\145\000\016\001\
    \119\000\119\000\119\000\119\000\119\000\119\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\252\000\018\001\145\000\145\000\
    \145\000\145\000\145\000\145\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\141\000\019\001\
    \252\000\021\001\022\001\252\000\024\001\025\001\141\000\141\000\
    \141\000\141\000\141\000\141\000\135\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\252\000\027\001\
    \028\001\208\000\029\001\252\000\031\001\135\000\135\000\135\000\
    \135\000\135\000\135\000\032\001\252\000\045\001\141\000\141\000\
    \141\000\141\000\141\000\141\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\146\000\146\000\146\000\146\000\146\000\146\000\
    \146\000\146\000\146\000\146\000\000\000\135\000\135\000\135\000\
    \135\000\135\000\135\000\146\000\146\000\146\000\146\000\146\000\
    \146\000\147\000\147\000\147\000\147\000\147\000\147\000\147\000\
    \147\000\147\000\147\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\147\000\147\000\147\000\147\000\147\000\147\000\
    \000\000\000\000\000\000\146\000\146\000\146\000\146\000\146\000\
    \146\000\000\000\205\000\207\000\204\000\000\000\000\000\135\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\135\000\135\000\
    \135\000\000\000\147\000\147\000\147\000\147\000\147\000\147\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\149\000\149\000\
    \149\000\149\000\149\000\149\000\149\000\149\000\149\000\149\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\149\000\
    \149\000\149\000\149\000\149\000\149\000\000\000\000\000\000\000\
    \135\000\135\000\135\000\135\000\135\000\135\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\150\000\150\000\150\000\150\000\
    \150\000\150\000\150\000\150\000\150\000\150\000\000\000\149\000\
    \149\000\149\000\149\000\149\000\149\000\150\000\150\000\150\000\
    \150\000\150\000\150\000\119\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\119\000\119\000\119\000\255\255\039\001\000\000\
    \000\000\000\000\000\000\000\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\000\000\000\000\000\000\150\000\150\000\150\000\
    \150\000\150\000\150\000\219\000\219\000\219\000\219\000\218\000\
    \218\000\218\000\218\000\044\001\210\000\036\001\000\000\000\000\
    \000\000\037\001\000\000\000\000\119\000\119\000\119\000\119\000\
    \119\000\119\000\159\000\155\000\154\000\158\000\038\001\000\000\
    \156\000\000\000\000\000\000\000\000\000\161\000\000\000\000\000\
    \000\000\157\000\000\000\000\000\152\000\000\000\160\000\203\000\
    \000\000\153\000\215\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\000\000\000\000\255\255\223\000\
    \255\255\000\000\000\000\210\000\210\000\210\000\212\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \210\000\210\000\210\000\210\000\210\000\212\000\210\000\210\000\
    \210\000\212\000\210\000\210\000\210\000\043\001\000\000\000\000\
    \000\000\000\000\000\000\206\000\210\000\214\000\212\000\206\000\
    \206\000\210\000\210\000\210\000\210\000\210\000\210\000\210\000\
    \206\000\210\000\211\000\210\000\206\000\212\000\206\000\213\000\
    \210\000\212\000\216\000\210\000\210\000\235\000\235\000\235\000\
    \235\000\235\000\235\000\235\000\235\000\235\000\235\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\235\000\235\000\
    \235\000\235\000\235\000\235\000\220\000\000\000\000\000\206\000\
    \206\000\206\000\206\000\206\000\206\000\206\000\206\000\220\000\
    \000\000\000\000\221\000\221\000\221\000\221\000\221\000\221\000\
    \221\000\221\000\000\000\000\000\000\000\000\000\235\000\235\000\
    \235\000\235\000\235\000\235\000\206\000\206\000\206\000\206\000\
    \206\000\206\000\206\000\206\000\206\000\206\000\206\000\206\000\
    \206\000\206\000\206\000\206\000\206\000\206\000\206\000\206\000\
    \206\000\206\000\206\000\206\000\206\000\206\000\206\000\206\000\
    \206\000\206\000\206\000\206\000\206\000\217\000\217\000\217\000\
    \217\000\217\000\217\000\217\000\217\000\217\000\217\000\000\000\
    \000\000\000\000\000\000\255\255\034\001\226\000\217\000\217\000\
    \217\000\217\000\217\000\217\000\220\000\000\000\000\000\206\000\
    \206\000\206\000\206\000\206\000\206\000\206\000\206\000\230\000\
    \230\000\230\000\230\000\229\000\229\000\229\000\229\000\000\000\
    \000\000\041\001\255\255\000\000\000\000\000\000\217\000\217\000\
    \217\000\217\000\217\000\217\000\206\000\206\000\206\000\206\000\
    \206\000\206\000\206\000\206\000\206\000\206\000\222\000\000\000\
    \225\000\000\000\222\000\222\000\000\000\206\000\206\000\206\000\
    \206\000\206\000\206\000\222\000\000\000\000\000\000\000\222\000\
    \000\000\222\000\224\000\000\000\000\000\227\000\000\000\000\000\
    \000\000\000\000\232\000\232\000\232\000\232\000\232\000\232\000\
    \232\000\232\000\232\000\232\000\000\000\206\000\206\000\206\000\
    \206\000\206\000\206\000\232\000\232\000\232\000\232\000\232\000\
    \232\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\231\000\231\000\231\000\231\000\231\000\231\000\231\000\
    \231\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\000\000\000\000\232\000\232\000\232\000\232\000\232\000\
    \232\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\222\000\228\000\228\000\228\000\228\000\228\000\228\000\
    \228\000\228\000\228\000\228\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\228\000\228\000\228\000\228\000\228\000\
    \228\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \000\000\000\000\000\000\228\000\228\000\228\000\228\000\228\000\
    \228\000\000\000\000\000\000\000\000\000\000\000\000\000\233\000\
    \233\000\233\000\233\000\233\000\233\000\233\000\233\000\233\000\
    \233\000\000\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \233\000\233\000\233\000\233\000\233\000\233\000\234\000\234\000\
    \234\000\234\000\234\000\234\000\234\000\234\000\234\000\234\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\000\
    \234\000\234\000\234\000\234\000\234\000\000\000\000\000\000\000\
    \233\000\233\000\233\000\233\000\233\000\233\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\222\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\222\000\222\000\222\000\000\000\234\000\
    \234\000\234\000\234\000\234\000\234\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\236\000\236\000\236\000\236\000\236\000\
    \236\000\236\000\236\000\236\000\236\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\236\000\236\000\236\000\236\000\
    \236\000\236\000\000\000\000\000\000\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\237\000\237\000\237\000\237\000\237\000\237\000\237\000\
    \237\000\237\000\237\000\000\000\236\000\236\000\236\000\236\000\
    \236\000\236\000\237\000\237\000\237\000\237\000\237\000\237\000\
    \206\000\206\000\206\000\206\000\206\000\206\000\206\000\206\000\
    \206\000\206\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\206\000\206\000\206\000\206\000\206\000\206\000\000\000\
    \000\000\000\000\237\000\237\000\237\000\237\000\237\000\237\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\206\000\206\000\206\000\206\000\206\000\206\000\246\000\
    \242\000\241\000\245\000\000\000\000\000\243\000\000\000\000\000\
    \000\000\000\000\248\000\000\000\000\000\000\000\244\000\000\000\
    \000\000\239\000\000\000\247\000\000\000\000\000\240\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\036\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\011\000\000\000\012\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\013\000\119\000\206\000\036\000\255\255\000\000\
    \009\000\011\000\255\255\012\000\068\000\024\000\003\000\085\000\
    \034\000\028\000\086\000\022\000\031\000\087\000\013\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\024\000\153\000\000\000\000\000\028\000\000\000\007\000\
    \031\000\034\000\090\000\034\000\034\000\034\000\078\000\082\000\
    \089\000\073\000\092\000\093\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\067\000\069\000\
    \070\000\071\000\075\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\045\000\
    \072\000\076\000\077\000\072\000\022\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\079\000\047\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\047\000\047\000\047\000\080\000\081\000\
    \083\000\084\000\088\000\084\000\074\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\074\000\091\000\094\000\
    \000\000\095\000\096\000\097\000\023\000\047\000\047\000\047\000\
    \047\000\047\000\047\000\098\000\099\000\100\000\027\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
    \050\000\050\000\101\000\102\000\003\000\103\000\104\000\105\000\
    \106\000\050\000\050\000\050\000\050\000\050\000\050\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \059\000\107\000\108\000\109\000\110\000\111\000\112\000\113\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\114\000\115\000\
    \116\000\050\000\050\000\050\000\050\000\050\000\050\000\061\000\
    \061\000\061\000\061\000\061\000\061\000\061\000\061\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\124\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \117\000\152\000\154\000\155\000\156\000\158\000\160\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\064\000\064\000\064\000\157\000\
    \159\000\161\000\157\000\162\000\163\000\164\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\165\000\166\000\167\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\133\000\168\000\170\000\
    \169\000\159\000\169\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\171\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\066\000\066\000\066\000\066\000\120\000\172\000\
    \066\000\117\000\117\000\173\000\174\000\066\000\175\000\176\000\
    \177\000\066\000\178\000\179\000\066\000\180\000\066\000\181\000\
    \182\000\066\000\183\000\184\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\128\000\128\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\185\000\186\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\120\000\133\000\133\000\
    \133\000\187\000\188\000\189\000\190\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\120\000\120\000\191\000\
    \192\000\193\000\194\000\195\000\196\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\120\000\120\000\120\000\
    \120\000\120\000\120\000\120\000\120\000\120\000\120\000\126\000\
    \126\000\126\000\126\000\126\000\126\000\126\000\126\000\126\000\
    \126\000\197\000\198\000\199\000\200\000\201\000\211\000\239\000\
    \126\000\126\000\126\000\126\000\126\000\126\000\131\000\240\000\
    \241\000\131\000\131\000\131\000\131\000\131\000\131\000\131\000\
    \131\000\132\000\242\000\243\000\132\000\132\000\132\000\132\000\
    \132\000\132\000\132\000\132\000\244\000\245\000\247\000\244\000\
    \126\000\126\000\126\000\126\000\126\000\126\000\117\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \129\000\129\000\129\000\129\000\129\000\129\000\129\000\129\000\
    \129\000\129\000\248\000\133\000\249\000\250\000\251\000\252\000\
    \136\000\129\000\129\000\129\000\129\000\129\000\129\000\134\000\
    \253\000\254\000\134\000\134\000\134\000\134\000\134\000\134\000\
    \134\000\134\000\139\000\139\000\139\000\139\000\139\000\139\000\
    \139\000\139\000\255\000\246\000\120\000\000\001\001\001\000\001\
    \002\001\129\000\129\000\129\000\129\000\129\000\129\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \130\000\136\000\003\001\136\000\246\000\136\000\136\000\004\001\
    \130\000\130\000\130\000\130\000\130\000\130\000\136\000\005\001\
    \006\001\007\001\136\000\008\001\136\000\136\000\009\001\010\001\
    \136\000\011\001\012\001\013\001\014\001\137\000\137\000\137\000\
    \137\000\137\000\137\000\137\000\137\000\137\000\137\000\015\001\
    \130\000\130\000\130\000\130\000\130\000\130\000\137\000\137\000\
    \137\000\137\000\137\000\137\000\142\000\142\000\142\000\142\000\
    \142\000\142\000\142\000\142\000\143\000\143\000\143\000\143\000\
    \143\000\143\000\143\000\143\000\144\000\144\000\144\000\144\000\
    \144\000\144\000\144\000\144\000\016\001\017\001\137\000\137\000\
    \137\000\137\000\137\000\137\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\138\000\138\000\138\000\
    \138\000\138\000\138\000\138\000\138\000\140\000\140\000\140\000\
    \140\000\140\000\140\000\140\000\140\000\140\000\140\000\018\001\
    \019\001\020\001\021\001\022\001\023\001\024\001\140\000\140\000\
    \140\000\140\000\140\000\140\000\141\000\141\000\141\000\141\000\
    \141\000\141\000\141\000\141\000\141\000\141\000\025\001\026\001\
    \027\001\202\000\028\001\029\001\030\001\141\000\141\000\141\000\
    \141\000\141\000\141\000\031\001\032\001\043\001\140\000\140\000\
    \140\000\140\000\140\000\140\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\145\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\145\000\145\000\145\000\255\255\141\000\141\000\141\000\
    \141\000\141\000\141\000\145\000\145\000\145\000\145\000\145\000\
    \145\000\146\000\146\000\146\000\146\000\146\000\146\000\146\000\
    \146\000\146\000\146\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\146\000\146\000\146\000\146\000\146\000\146\000\
    \255\255\255\255\255\255\145\000\145\000\145\000\145\000\145\000\
    \145\000\255\255\202\000\202\000\202\000\255\255\255\255\147\000\
    \147\000\147\000\147\000\147\000\147\000\147\000\147\000\147\000\
    \147\000\255\255\146\000\146\000\146\000\146\000\146\000\146\000\
    \147\000\147\000\147\000\147\000\147\000\147\000\148\000\148\000\
    \148\000\148\000\148\000\148\000\148\000\148\000\148\000\148\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\148\000\
    \148\000\148\000\148\000\148\000\148\000\255\255\255\255\255\255\
    \147\000\147\000\147\000\147\000\147\000\147\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\149\000\149\000\149\000\149\000\
    \149\000\149\000\149\000\149\000\149\000\149\000\255\255\148\000\
    \148\000\148\000\148\000\148\000\148\000\149\000\149\000\149\000\
    \149\000\149\000\149\000\150\000\150\000\150\000\150\000\150\000\
    \150\000\150\000\150\000\150\000\150\000\220\000\033\001\255\255\
    \255\255\255\255\255\255\255\255\150\000\150\000\150\000\150\000\
    \150\000\150\000\255\255\255\255\255\255\149\000\149\000\149\000\
    \149\000\149\000\149\000\215\000\215\000\215\000\215\000\215\000\
    \215\000\215\000\215\000\040\001\207\000\033\001\255\255\255\255\
    \255\255\033\001\255\255\255\255\150\000\150\000\150\000\150\000\
    \150\000\150\000\151\000\151\000\151\000\151\000\033\001\255\255\
    \151\000\255\255\255\255\255\255\255\255\151\000\255\255\255\255\
    \255\255\151\000\255\255\255\255\151\000\255\255\151\000\202\000\
    \255\255\151\000\207\000\207\000\207\000\207\000\207\000\207\000\
    \207\000\207\000\207\000\207\000\255\255\255\255\220\000\220\000\
    \220\000\255\255\255\255\207\000\207\000\207\000\207\000\207\000\
    \207\000\207\000\207\000\207\000\207\000\207\000\207\000\207\000\
    \207\000\207\000\207\000\207\000\207\000\207\000\207\000\207\000\
    \207\000\207\000\207\000\207\000\207\000\040\001\255\255\255\255\
    \255\255\255\255\255\255\207\000\207\000\207\000\207\000\207\000\
    \207\000\207\000\207\000\207\000\207\000\207\000\207\000\207\000\
    \207\000\207\000\207\000\207\000\207\000\207\000\207\000\207\000\
    \207\000\207\000\207\000\207\000\207\000\213\000\213\000\213\000\
    \213\000\213\000\213\000\213\000\213\000\213\000\213\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\213\000\213\000\
    \213\000\213\000\213\000\213\000\218\000\255\255\255\255\218\000\
    \218\000\218\000\218\000\218\000\218\000\218\000\218\000\219\000\
    \255\255\255\255\219\000\219\000\219\000\219\000\219\000\219\000\
    \219\000\219\000\255\255\255\255\255\255\255\255\213\000\213\000\
    \213\000\213\000\213\000\213\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\214\000\216\000\216\000\216\000\
    \216\000\216\000\216\000\216\000\216\000\216\000\216\000\255\255\
    \255\255\255\255\255\255\220\000\033\001\223\000\216\000\216\000\
    \216\000\216\000\216\000\216\000\221\000\255\255\255\255\221\000\
    \221\000\221\000\221\000\221\000\221\000\221\000\221\000\226\000\
    \226\000\226\000\226\000\226\000\226\000\226\000\226\000\255\255\
    \255\255\040\001\207\000\255\255\255\255\255\255\216\000\216\000\
    \216\000\216\000\216\000\216\000\217\000\217\000\217\000\217\000\
    \217\000\217\000\217\000\217\000\217\000\217\000\223\000\255\255\
    \223\000\255\255\223\000\223\000\255\255\217\000\217\000\217\000\
    \217\000\217\000\217\000\223\000\255\255\255\255\255\255\223\000\
    \255\255\223\000\223\000\255\255\255\255\223\000\255\255\255\255\
    \255\255\255\255\224\000\224\000\224\000\224\000\224\000\224\000\
    \224\000\224\000\224\000\224\000\255\255\217\000\217\000\217\000\
    \217\000\217\000\217\000\224\000\224\000\224\000\224\000\224\000\
    \224\000\229\000\229\000\229\000\229\000\229\000\229\000\229\000\
    \229\000\230\000\230\000\230\000\230\000\230\000\230\000\230\000\
    \230\000\231\000\231\000\231\000\231\000\231\000\231\000\231\000\
    \231\000\255\255\255\255\224\000\224\000\224\000\224\000\224\000\
    \224\000\225\000\225\000\225\000\225\000\225\000\225\000\225\000\
    \225\000\225\000\225\000\225\000\225\000\225\000\225\000\225\000\
    \225\000\225\000\225\000\225\000\225\000\225\000\225\000\225\000\
    \225\000\225\000\225\000\225\000\225\000\225\000\225\000\225\000\
    \225\000\225\000\227\000\227\000\227\000\227\000\227\000\227\000\
    \227\000\227\000\227\000\227\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\227\000\227\000\227\000\227\000\227\000\
    \227\000\228\000\228\000\228\000\228\000\228\000\228\000\228\000\
    \228\000\228\000\228\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\228\000\228\000\228\000\228\000\228\000\228\000\
    \255\255\255\255\255\255\227\000\227\000\227\000\227\000\227\000\
    \227\000\255\255\255\255\255\255\255\255\255\255\255\255\232\000\
    \232\000\232\000\232\000\232\000\232\000\232\000\232\000\232\000\
    \232\000\255\255\228\000\228\000\228\000\228\000\228\000\228\000\
    \232\000\232\000\232\000\232\000\232\000\232\000\233\000\233\000\
    \233\000\233\000\233\000\233\000\233\000\233\000\233\000\233\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\233\000\
    \233\000\233\000\233\000\233\000\233\000\255\255\255\255\255\255\
    \232\000\232\000\232\000\232\000\232\000\232\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\234\000\234\000\234\000\234\000\
    \234\000\234\000\234\000\234\000\234\000\234\000\255\255\233\000\
    \233\000\233\000\233\000\233\000\233\000\234\000\234\000\234\000\
    \234\000\234\000\234\000\235\000\235\000\235\000\235\000\235\000\
    \235\000\235\000\235\000\235\000\235\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\235\000\235\000\235\000\235\000\
    \235\000\235\000\255\255\255\255\255\255\234\000\234\000\234\000\
    \234\000\234\000\234\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\236\000\236\000\236\000\236\000\236\000\236\000\236\000\
    \236\000\236\000\236\000\255\255\235\000\235\000\235\000\235\000\
    \235\000\235\000\236\000\236\000\236\000\236\000\236\000\236\000\
    \237\000\237\000\237\000\237\000\237\000\237\000\237\000\237\000\
    \237\000\237\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\237\000\237\000\237\000\237\000\237\000\237\000\255\255\
    \255\255\255\255\236\000\236\000\236\000\236\000\236\000\236\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\237\000\237\000\237\000\237\000\237\000\237\000\238\000\
    \238\000\238\000\238\000\255\255\255\255\238\000\255\255\255\255\
    \255\255\255\255\238\000\255\255\255\255\255\255\238\000\255\255\
    \255\255\238\000\255\255\238\000\255\255\255\255\238\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\054\000\
    \020\000\000\000\102\000\028\000\125\000\000\000\133\000\009\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\141\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\002\000\000\000\000\000\000\000\000\000\115\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\196\000\196\000\
    \000\000\244\000\011\001\019\001\000\000\027\001\009\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\043\001\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_backtrk_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\009\000\009\000\
    \009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\009\000\009\000\009\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_default_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\012\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\012\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_trans_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
    \001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
    \001\000\001\000\001\000\001\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\012\000\000\000\000\000\000\000\012\000\012\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\012\000\000\000\
    \000\000\000\000\012\000\000\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\000\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\000\000\000\000\000\000\
    \012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\012\000\000\000\000\000\000\000\012\000\000\000\012\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\000\000\000\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000";
  Lexing.lex_check_code =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\117\000\255\255\202\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\128\000\128\000\128\000\128\000\
    \128\000\128\000\128\000\128\000\131\000\131\000\131\000\131\000\
    \131\000\131\000\131\000\131\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\117\000\117\000\202\000\202\000\202\000\
    \255\255\120\000\255\255\255\255\255\255\120\000\120\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\120\000\255\255\
    \255\255\255\255\120\000\255\255\120\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\127\000\127\000\
    \127\000\127\000\127\000\127\000\127\000\127\000\130\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\130\000\130\000\130\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\130\000\
    \130\000\130\000\130\000\130\000\130\000\132\000\132\000\132\000\
    \132\000\132\000\132\000\132\000\132\000\134\000\134\000\134\000\
    \134\000\134\000\134\000\134\000\134\000\150\000\150\000\150\000\
    \150\000\150\000\150\000\150\000\150\000\150\000\150\000\130\000\
    \130\000\130\000\130\000\130\000\130\000\255\255\150\000\150\000\
    \150\000\150\000\150\000\150\000\207\000\255\255\255\255\255\255\
    \207\000\207\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\207\000\255\255\255\255\255\255\207\000\255\255\207\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\150\000\150\000\
    \150\000\150\000\150\000\150\000\215\000\215\000\215\000\215\000\
    \215\000\215\000\215\000\215\000\255\255\255\255\255\255\255\255\
    \117\000\255\255\202\000\214\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\214\000\214\000\214\000\214\000\
    \214\000\214\000\214\000\214\000\217\000\217\000\217\000\217\000\
    \217\000\217\000\217\000\217\000\217\000\217\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\217\000\217\000\217\000\
    \217\000\217\000\217\000\218\000\218\000\218\000\218\000\218\000\
    \218\000\218\000\218\000\219\000\219\000\219\000\219\000\219\000\
    \219\000\219\000\219\000\221\000\221\000\221\000\221\000\221\000\
    \221\000\221\000\221\000\255\255\255\255\217\000\217\000\217\000\
    \217\000\217\000\217\000\237\000\237\000\237\000\237\000\237\000\
    \237\000\237\000\237\000\237\000\237\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\237\000\237\000\237\000\237\000\
    \237\000\237\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\237\000\237\000\237\000\237\000\
    \237\000\237\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_code =
   "\255\002\255\001\255\255\000\002\255\000\001\255\001\255\255";
}

let rec tk_normal lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 3 (-1); __ocaml_lex_tk_normal_rec lexbuf 0
and __ocaml_lex_tk_normal_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 112 "RegexLexer.mll"
             ( Eos )
# 955 "RegexLexer.ml"

  | 1 ->
# 113 "RegexLexer.mll"
         ( VBar )
# 960 "RegexLexer.ml"

  | 2 ->
# 114 "RegexLexer.mll"
            ( raise (ParsingData.UnsupportedPossessiveQuantifier(get_epos lexbuf)) )
# 965 "RegexLexer.ml"

  | 3 ->
# 115 "RegexLexer.mll"
            ( Repetition(get_epos lexbuf, (0, -1, ParsingData.Rq)) )
# 970 "RegexLexer.ml"

  | 4 ->
# 116 "RegexLexer.mll"
         ( Repetition(get_epos lexbuf, (0, -1, ParsingData.Gq)) )
# 975 "RegexLexer.ml"

  | 5 ->
# 117 "RegexLexer.mll"
            ( raise (ParsingData.UnsupportedPossessiveQuantifier(get_epos lexbuf)) )
# 980 "RegexLexer.ml"

  | 6 ->
# 118 "RegexLexer.mll"
            ( Repetition(get_epos lexbuf, (1, -1, ParsingData.Rq)) )
# 985 "RegexLexer.ml"

  | 7 ->
# 119 "RegexLexer.mll"
         ( Repetition(get_epos lexbuf, (1, -1, ParsingData.Gq)) )
# 990 "RegexLexer.ml"

  | 8 ->
# 120 "RegexLexer.mll"
            ( raise (ParsingData.UnsupportedPossessiveQuantifier(get_epos lexbuf)) )
# 995 "RegexLexer.ml"

  | 9 ->
# 121 "RegexLexer.mll"
            ( Repetition(get_epos lexbuf, (0, 1, ParsingData.Rq)) )
# 1000 "RegexLexer.ml"

  | 10 ->
# 122 "RegexLexer.mll"
         ( Repetition(get_epos lexbuf, (0, 1, ParsingData.Gq)) )
# 1005 "RegexLexer.ml"

  | 11 ->
# 123 "RegexLexer.mll"
                                ( raise (ParsingData.UnsupportedPossessiveQuantifier(get_epos lexbuf)) )
# 1010 "RegexLexer.ml"

  | 12 ->
let
# 124 "RegexLexer.mll"
                          m_str
# 1016 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -2) in
# 124 "RegexLexer.mll"
                                         ( let m = int_of_string m_str in Repetition(get_epos lexbuf, (m, m, ParsingData.Rq)) )
# 1020 "RegexLexer.ml"

  | 13 ->
let
# 125 "RegexLexer.mll"
                          m_str
# 1026 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 125 "RegexLexer.mll"
                                     ( let m = int_of_string m_str in Repetition(get_epos lexbuf, (m, m, ParsingData.Gq)) )
# 1030 "RegexLexer.ml"

  | 14 ->
# 126 "RegexLexer.mll"
                                    ( raise (ParsingData.UnsupportedPossessiveQuantifier(get_epos lexbuf)) )
# 1035 "RegexLexer.ml"

  | 15 ->
let
# 127 "RegexLexer.mll"
                          m_str
# 1041 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -3) in
# 127 "RegexLexer.mll"
                                             ( let m = int_of_string m_str in Repetition(get_epos lexbuf, (m, -1, ParsingData.Rq)) )
# 1045 "RegexLexer.ml"

  | 16 ->
let
# 128 "RegexLexer.mll"
                          m_str
# 1051 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) (lexbuf.Lexing.lex_curr_pos + -2) in
# 128 "RegexLexer.mll"
                                         ( let m = int_of_string m_str in Repetition(get_epos lexbuf, (m, -1, ParsingData.Gq)) )
# 1055 "RegexLexer.ml"

  | 17 ->
# 129 "RegexLexer.mll"
                                                   ( raise (ParsingData.UnsupportedPossessiveQuantifier(get_epos lexbuf)) )
# 1060 "RegexLexer.ml"

  | 18 ->
let
# 130 "RegexLexer.mll"
                          m_str
# 1066 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_mem.(0)
and
# 130 "RegexLexer.mll"
                                                      n_str
# 1071 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_mem.(0) + 1) (lexbuf.Lexing.lex_curr_pos + -2) in
# 130 "RegexLexer.mll"
                                                                     ( Repetition(get_epos lexbuf, (int_of_string m_str, int_of_string n_str, ParsingData.Rq)) )
# 1075 "RegexLexer.ml"

  | 19 ->
let
# 131 "RegexLexer.mll"
                          m_str
# 1081 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_mem.(0)
and
# 131 "RegexLexer.mll"
                                                      n_str
# 1086 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_mem.(0) + 1) (lexbuf.Lexing.lex_curr_pos + -1) in
# 131 "RegexLexer.mll"
                                                                 ( Repetition(get_epos lexbuf, (int_of_string m_str, int_of_string n_str, ParsingData.Gq)) )
# 1090 "RegexLexer.ml"

  | 20 ->
# 132 "RegexLexer.mll"
         ( raise (ParsingData.IncompleteRangeDefinition(get_spos lexbuf)) )
# 1095 "RegexLexer.ml"

  | 21 ->
# 133 "RegexLexer.mll"
               ( GrpOpen(get_spos lexbuf, ParsingData.NOCAP) )
# 1100 "RegexLexer.ml"

  | 22 ->
# 134 "RegexLexer.mll"
               ( GrpOpen(get_spos lexbuf, ParsingData.PLA) )
# 1105 "RegexLexer.ml"

  | 23 ->
# 135 "RegexLexer.mll"
               ( GrpOpen(get_spos lexbuf, ParsingData.NLA) )
# 1110 "RegexLexer.ml"

  | 24 ->
# 136 "RegexLexer.mll"
                  ( GrpOpen(get_spos lexbuf, ParsingData.PLB) )
# 1115 "RegexLexer.ml"

  | 25 ->
# 137 "RegexLexer.mll"
                  ( GrpOpen(get_spos lexbuf, ParsingData.NLB) )
# 1120 "RegexLexer.ml"

  | 26 ->
# 138 "RegexLexer.mll"
               ( GrpOpen(get_spos lexbuf, ParsingData.ATOMIC) )
# 1125 "RegexLexer.ml"

  | 27 ->
# 139 "RegexLexer.mll"
            ( ModsGrpOpen(get_spos lexbuf) )
# 1130 "RegexLexer.ml"

  | 28 ->
# 140 "RegexLexer.mll"
         ( GrpOpen(get_spos lexbuf, ParsingData.CAP(0)) )
# 1135 "RegexLexer.ml"

  | 29 ->
# 141 "RegexLexer.mll"
         ( GrpClose(get_spos lexbuf) )
# 1140 "RegexLexer.ml"

  | 30 ->
# 142 "RegexLexer.mll"
            ( ClsOpen(get_spos lexbuf, true) )
# 1145 "RegexLexer.ml"

  | 31 ->
# 143 "RegexLexer.mll"
         ( ClsOpen(get_spos lexbuf, false) )
# 1150 "RegexLexer.ml"

  | 32 ->
# 144 "RegexLexer.mll"
         ( Anchor(get_pos lexbuf, ParsingData.Bol) )
# 1155 "RegexLexer.ml"

  | 33 ->
# 145 "RegexLexer.mll"
         ( Anchor(get_pos lexbuf, ParsingData.Eol) )
# 1160 "RegexLexer.ml"

  | 34 ->
# 146 "RegexLexer.mll"
         ( TkDot(get_spos lexbuf) )
# 1165 "RegexLexer.ml"

  | 35 ->
# 147 "RegexLexer.mll"
             ( Anchor(get_pos lexbuf, ParsingData.Wordb) )
# 1170 "RegexLexer.ml"

  | 36 ->
# 148 "RegexLexer.mll"
             ( Anchor(get_pos lexbuf, ParsingData.NWordb) )
# 1175 "RegexLexer.ml"

  | 37 ->
# 149 "RegexLexer.mll"
             ( Anchor(get_pos lexbuf, ParsingData.Boi) )
# 1180 "RegexLexer.ml"

  | 38 ->
# 150 "RegexLexer.mll"
             ( Anchor(get_pos lexbuf, ParsingData.Eom) )
# 1185 "RegexLexer.ml"

  | 39 ->
# 151 "RegexLexer.mll"
             ( Anchor(get_pos lexbuf, ParsingData.Eoi1) )
# 1190 "RegexLexer.ml"

  | 40 ->
# 152 "RegexLexer.mll"
             ( Anchor(get_pos lexbuf, ParsingData.Eoi2) )
# 1195 "RegexLexer.ml"

  | 41 ->
# 153 "RegexLexer.mll"
             ( BeginQuote(get_pos lexbuf) )
# 1200 "RegexLexer.ml"

  | 42 ->
let
# 154 "RegexLexer.mll"
                                       num
# 1206 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 154 "RegexLexer.mll"
                                            ( TkBackref(get_pos lexbuf, int_of_string num) )
# 1210 "RegexLexer.ml"

  | 43 ->
let
# 155 "RegexLexer.mll"
                       u
# 1216 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 155 "RegexLexer.mll"
                         ( Literal(get_pos lexbuf, resolve_literal u (get_spos lexbuf)) )
# 1220 "RegexLexer.ml"

  | 44 ->
let
# 156 "RegexLexer.mll"
                       cls
# 1226 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 156 "RegexLexer.mll"
                           ( ClsNamed(get_pos lexbuf, resolve_class cls) )
# 1230 "RegexLexer.ml"

  | 45 ->
let
# 157 "RegexLexer.mll"
                                        c
# 1236 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 157 "RegexLexer.mll"
                                           ( raise (ParsingData.UnsupportedEscape(get_epos lexbuf, c)) )
# 1240 "RegexLexer.ml"

  | 46 ->
let
# 158 "RegexLexer.mll"
                c
# 1246 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 158 "RegexLexer.mll"
                   ( Literal(get_pos lexbuf, resolve_char c (get_spos lexbuf)) )
# 1250 "RegexLexer.ml"

  | 47 ->
# 159 "RegexLexer.mll"
         ( raise ParsingData.UnexpectedEndOfInput )
# 1255 "RegexLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tk_normal_rec lexbuf __ocaml_lex_state

and tk_class_header lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 2 (-1); __ocaml_lex_tk_class_header_rec lexbuf 117
and __ocaml_lex_tk_class_header_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 161 "RegexLexer.mll"
             ( Eos )
# 1267 "RegexLexer.ml"

  | 1 ->
let
# 100 "RegexLexer.mll"
                                                        u
# 1273 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0)
and
# 101 "RegexLexer.mll"
                                                        v
# 1278 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_mem.(0) + 1) lexbuf.Lexing.lex_curr_pos in
# 162 "RegexLexer.mll"
                 ( ClsRange(resolve_literal u (get_spos lexbuf), resolve_literal v (get_spos lexbuf)) )
# 1282 "RegexLexer.ml"

  | 2 ->
let
# 163 "RegexLexer.mll"
                      u
# 1288 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 163 "RegexLexer.mll"
                        ( Literal(get_pos lexbuf, resolve_literal u (get_spos lexbuf)) )
# 1292 "RegexLexer.ml"

  | 3 ->
let
# 164 "RegexLexer.mll"
                       cls
# 1298 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 164 "RegexLexer.mll"
                           ( ClsNamed(get_pos lexbuf, resolve_class cls) )
# 1302 "RegexLexer.ml"

  | 4 ->
let
# 165 "RegexLexer.mll"
                                                  c
# 1308 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 165 "RegexLexer.mll"
                                                     ( raise (ParsingData.UnsupportedEscape(get_epos lexbuf, c)) )
# 1312 "RegexLexer.ml"

  | 5 ->
let
# 166 "RegexLexer.mll"
                c
# 1318 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 166 "RegexLexer.mll"
                   ( Literal(get_pos lexbuf, resolve_char c (get_spos lexbuf)) )
# 1322 "RegexLexer.ml"

  | 6 ->
# 167 "RegexLexer.mll"
         ( raise ParsingData.UnexpectedEndOfInput )
# 1327 "RegexLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tk_class_header_rec lexbuf __ocaml_lex_state

and tk_class_body lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 2 (-1); __ocaml_lex_tk_class_body_rec lexbuf 202
and __ocaml_lex_tk_class_body_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 169 "RegexLexer.mll"
             ( Eos )
# 1339 "RegexLexer.ml"

  | 1 ->
let
# 102 "RegexLexer.mll"
                                                        u
# 1345 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0)
and
# 103 "RegexLexer.mll"
                                                        v
# 1350 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_mem.(0) + 1) lexbuf.Lexing.lex_curr_pos in
# 170 "RegexLexer.mll"
                 ( ClsRange(resolve_literal u (get_spos lexbuf), resolve_literal v (get_spos lexbuf)) )
# 1354 "RegexLexer.ml"

  | 2 ->
let
# 171 "RegexLexer.mll"
                      u
# 1360 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 171 "RegexLexer.mll"
                        ( Literal(get_pos lexbuf, resolve_literal u (get_spos lexbuf)) )
# 1364 "RegexLexer.ml"

  | 3 ->
let
# 172 "RegexLexer.mll"
                       cls
# 1370 "RegexLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 172 "RegexLexer.mll"
                           ( ClsNamed(get_pos lexbuf, resolve_class cls) )
# 1374 "RegexLexer.ml"

  | 4 ->
let
# 173 "RegexLexer.mll"
                                                  c
# 1380 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 173 "RegexLexer.mll"
                                                     ( raise (ParsingData.UnsupportedEscape(get_epos lexbuf, c)) )
# 1384 "RegexLexer.ml"

  | 5 ->
let
# 174 "RegexLexer.mll"
                c
# 1390 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1) in
# 174 "RegexLexer.mll"
                   ( Literal(get_pos lexbuf, resolve_char c (get_spos lexbuf)) )
# 1394 "RegexLexer.ml"

  | 6 ->
# 175 "RegexLexer.mll"
            ( ClsClose(get_spos lexbuf) )
# 1399 "RegexLexer.ml"

  | 7 ->
# 176 "RegexLexer.mll"
         ( raise ParsingData.UnexpectedEndOfInput )
# 1404 "RegexLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tk_class_body_rec lexbuf __ocaml_lex_state

and tk_mods_head lexbuf =
   __ocaml_lex_tk_mods_head_rec lexbuf 289
and __ocaml_lex_tk_mods_head_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 178 "RegexLexer.mll"
             ( Eos )
# 1416 "RegexLexer.ml"

  | 1 ->
# 179 "RegexLexer.mll"
         ( EndMods )
# 1421 "RegexLexer.ml"

  | 2 ->
# 180 "RegexLexer.mll"
         ( NegMods )
# 1426 "RegexLexer.ml"

  | 3 ->
# 181 "RegexLexer.mll"
         ( GrpClose(get_spos lexbuf) )
# 1431 "RegexLexer.ml"

  | 4 ->
let
# 182 "RegexLexer.mll"
           c
# 1437 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 182 "RegexLexer.mll"
             ( Mod(get_flag c (get_spos lexbuf)) )
# 1441 "RegexLexer.ml"

  | 5 ->
# 183 "RegexLexer.mll"
         ( raise ParsingData.UnexpectedEndOfInput )
# 1446 "RegexLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tk_mods_head_rec lexbuf __ocaml_lex_state

and tk_quote lexbuf =
   __ocaml_lex_tk_quote_rec lexbuf 296
and __ocaml_lex_tk_quote_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 185 "RegexLexer.mll"
             ( Eos )
# 1458 "RegexLexer.ml"

  | 1 ->
# 186 "RegexLexer.mll"
             ( EndQuote(get_pos lexbuf) )
# 1463 "RegexLexer.ml"

  | 2 ->
let
# 187 "RegexLexer.mll"
          u
# 1469 "RegexLexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 187 "RegexLexer.mll"
            ( Literal(get_pos lexbuf, resolve_char u (get_spos lexbuf)) )
# 1473 "RegexLexer.ml"

  | 3 ->
# 188 "RegexLexer.mll"
         ( raise ParsingData.UnexpectedEndOfInput )
# 1478 "RegexLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_tk_quote_rec lexbuf __ocaml_lex_state

;;

